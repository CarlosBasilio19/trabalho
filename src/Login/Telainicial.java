/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Login;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import conexao.ConnectionFactory;
/**
 *
 * @author carlo
 */
public class Telainicial extends javax.swing.JFrame {

    public Telainicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        listfunci = new javax.swing.JToggleButton();
        addfunci = new javax.swing.JToggleButton();
        avalia = new javax.swing.JToggleButton();
        pedid = new javax.swing.JToggleButton();
        addprod = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(229, 171, 55));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setText("     TELA INICIAL");

        listfunci.setText("Lista de Funcionarios");
        listfunci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listfunciActionPerformed(evt);
            }
        });

        addfunci.setText("Adicionar funcionarios");
        addfunci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addfunciActionPerformed(evt);
            }
        });

        avalia.setText("Avaliaçoes");
        avalia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avaliaActionPerformed(evt);
            }
        });

        pedid.setText("Pedidos");
        pedid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedidActionPerformed(evt);
            }
        });

        addprod.setLabel("Adicionar Produtos");
        addprod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addprodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addprod, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pedid, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(avalia, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listfunci, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addfunci, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(598, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addfunci)
                .addGap(18, 18, 18)
                .addComponent(listfunci)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(avalia)
                .addGap(18, 18, 18)
                .addComponent(pedid)
                .addGap(18, 18, 18)
                .addComponent(addprod)
                .addContainerGap(388, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addfunciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addfunciActionPerformed
        
    Addfuncio addfuncioForm = new Addfuncio();
    
   
    addfuncioForm.setLocationRelativeTo(this); 
    
   
    addfuncioForm.setVisible(true);
    }//GEN-LAST:event_addfunciActionPerformed

    private void avaliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avaliaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_avaliaActionPerformed

    private void listfunciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listfunciActionPerformed
       
        StringBuilder resultBuilder = new StringBuilder("Dados da tabela 'funcionarios':\n");

        Connection connection = null;
        try {
            // Obter a conexão usando a ConnectionFactory
            connection = ConnectionFactory.getConnection();

            // Criar uma declaração SQL
            try (Statement statement = connection.createStatement()) {
                // Consultar todos os dados da tabela funcionarios
                String query = "SELECT id, nome, cargo, salario, data_admissao FROM funcionarios";
                
                try (ResultSet resultSet = statement.executeQuery(query)) {
                    // Obter metadados da tabela
                    ResultSetMetaData metaData = resultSet.getMetaData();
                    int columnCount = metaData.getColumnCount();

                    // Adicionar os dados de cada linha à StringBuilder
                    while (resultSet.next()) {
                        for (int i = 1; i <= columnCount; i++) {
                            String columnName = metaData.getColumnName(i);
                            Object value = resultSet.getObject(i);
                            resultBuilder.append(columnName).append(": ").append(value).append(" ");
                        }
                        resultBuilder.append("\n");
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Erro ao consultar a tabela 'funcionarios': " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Erro ao criar declaração SQL: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } finally {
            // Fechar a conexão usando ConnectionFactory
            ConnectionFactory.closeConnection(connection);
        }

        // Exibir os dados em uma caixa de diálogo
        JOptionPane.showMessageDialog(this, resultBuilder.toString(), "Dados da Tabela 'Funcionarios'", JOptionPane.INFORMATION_MESSAGE);
                                       
    }//GEN-LAST:event_listfunciActionPerformed

    private void pedidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pedidActionPerformed

    private void addprodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addprodActionPerformed
        Addprodutos addprodutos = new Addprodutos();
    
   
    addprodutos.setLocationRelativeTo(this); 
    
   
    addprodutos.setVisible(true);
    }//GEN-LAST:event_addprodActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Telainicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Telainicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Telainicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Telainicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Telainicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton addfunci;
    private javax.swing.JButton addprod;
    private javax.swing.JToggleButton avalia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton listfunci;
    private javax.swing.JToggleButton pedid;
    // End of variables declaration//GEN-END:variables
}
